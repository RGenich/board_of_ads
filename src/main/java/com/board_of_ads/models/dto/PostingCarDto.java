package com.board_of_ads.models.dto;

import com.board_of_ads.models.User;
import com.board_of_ads.models.posting.autoTransport.cars.PostingCar;
import lombok.AllArgsConstructor;
import lombok.Data;
import java.time.format.DateTimeFormatter;

@Data
@AllArgsConstructor
public class PostingCarDto {

    private String vinCode;
    private boolean isCarNew;
    private Long sellerId;
    private String typeOfUsedCarPosting;
    private String statePlateNumber;
    private int mileage;
    private byte numberOfOwners;
    private Long modelIdInAutoCatalogue;
    private String carColor;
    private String carBrand;
    private String carModel;
    private Short carYear;
    private String carBodyType;
    private byte numberOfDoors;
    private boolean wasInAccident;
    private boolean dealerServiced;
    private boolean underWarranty;
    private boolean hasServiceBook;
    private String powerSteeringType;
    private String climateControlType;
    private boolean onWheelControl;
    private boolean thermalGlass;
    private String interiorType;
    private boolean leatherWheel;
    private boolean sunroof;
    private boolean heatedFrontSeats;
    private boolean heatedRearSeats;
    private boolean heatedMirrors;
    private boolean heatedRearWindow;
    private boolean heatedWheel;
    private String powerWindowsType;
    private boolean powerFrontSeats;
    private boolean powerRearSeats;
    private boolean powerMirrorRegulation;
    private boolean powerSteeringWheelRegulation;
    private boolean powerMirrorClose;
    private boolean frontSeatsMemory;
    private boolean rearSeatsMemory;
    private boolean mirrorRegulationMemory;
    private boolean steeringWheelRegulationMemory;
    private boolean parkingAssist;
    private boolean rainSensor;
    private boolean lightSensor;
    private boolean rearParkingSensor;
    private boolean frontParkingSensor;
    private boolean blindSpotZoneControl;
    private boolean rearCamera;
    private boolean cruiseControl;
    private boolean onBoardComp;
    private boolean alarmSystem;
    private boolean powerDoorBlocking;
    private boolean immobilizer;
    private boolean satelliteAlarmControl;
    private boolean frontalAirbags;
    private boolean kneeAirbags;
    private boolean sideWindowAirbags;
    private boolean frontSideAirbags;
    private boolean rearSideAirbags;
    private boolean absSystem;
    private boolean dtcSystem;
    private boolean trackingControl;
    private boolean breakAssistSystem;
    private boolean emergencyBreakSystem;
    private boolean diffLockSystem;
    private boolean pedestrianDetectSystem;
    private boolean cdDvdBluRay;
    private boolean mp3;
    private boolean radio;
    private boolean tvSystem;
    private boolean videoSystem;
    private boolean mediaOnWheelControl;
    private boolean usb;
    private boolean aux;
    private boolean bluetooth;
    private boolean gpsNavigation;
    private String audioSystemType;
    private boolean subwoofer;
    private String frontLightType;
    private boolean antifogLights;
    private boolean frontLightCleaning;
    private boolean adaptiveLights;
    private String howToContactVsSeller;
    private String tyreSize;
    private boolean winterTyreSetIncluded;
    private String typeOfEngine;
    private String wheelDrive;
    private String transmission;
    private String modification;
    private String configuration;
    private String category;
    private String message;
    private String title;
    private String description;
    private long price;
    private String contact;
    private String meetingAddress;
    private boolean isActive;
    private int viewNumber;
    private String datePosting;
 //   private List<Image> images;
    private String city;
    private String condition;
    private String videoURL;
    private String contactEmail;

    public PostingCarDto(PostingCar pc, User user) {
        vinCode = pc.getVinCode();
        isCarNew = pc.isCarNew();
        sellerId = user.getId();
        typeOfUsedCarPosting = pc.getTypeOfUsedCarPosting();
        statePlateNumber = pc.getStatePlateNumber();
        mileage = pc.getMileage();
        numberOfOwners = pc.getNumberOfOwners();
        modelIdInAutoCatalogue = pc.getModelIdInAutoCatalogue();
        carColor = pc.getCarColor();
        carBrand = pc.getCarBrand();
        carModel = pc.getCarModel();
        carYear = pc.getCarYear();
        carBodyType = pc.getCarBodyType();
        numberOfDoors = pc.getNumberOfDoors();
        wasInAccident = pc.isWasInAccident();
        dealerServiced = pc.isDealerServiced();
        underWarranty = pc.isUnderWarranty();
        hasServiceBook = pc.isHasServiceBook();
        powerSteeringType = pc.getPowerSteeringType();
        climateControlType = pc.getClimateControlType();
        onWheelControl = pc.isOnWheelControl();
        thermalGlass = pc.isThermalGlass();
        interiorType = pc.getInteriorType();
        leatherWheel = pc.isLeatherWheel();
        sunroof = pc.isSunroof();
        heatedFrontSeats = pc.isHeatedFrontSeats();
        heatedRearSeats = pc.isHeatedRearSeats();
        heatedMirrors = pc.isHeatedMirrors();
        heatedRearWindow = pc.isHeatedRearWindow();
        heatedWheel = pc.isHeatedWheel();
        powerWindowsType = pc.getPowerWindowsType();
        powerFrontSeats = pc.isPowerFrontSeats();
        powerRearSeats = pc.isPowerRearSeats();
        powerMirrorRegulation = pc.isPowerMirrorRegulation();
        powerSteeringWheelRegulation = pc.isPowerSteeringWheelRegulation();
        powerMirrorClose = pc.isPowerMirrorClose();
        frontSeatsMemory = pc.isFrontSeatsMemory();
        rearSeatsMemory = pc.isRearSeatsMemory();
        mirrorRegulationMemory = pc.isMirrorRegulationMemory();
        steeringWheelRegulationMemory = pc.isSteeringWheelRegulationMemory();
        parkingAssist = pc.isParkingAssist();
        rainSensor = pc.isRainSensor();
        lightSensor = pc.isLightSensor();
        rearParkingSensor = pc.isRearParkingSensor();
        frontParkingSensor = pc.isFrontParkingSensor();
        blindSpotZoneControl = pc.isBlindSpotZoneControl();
        rearCamera = pc.isRearCamera();
        cruiseControl = pc.isCruiseControl();
        onBoardComp = pc.isOnBoardComp();
        alarmSystem = pc.isAlarmSystem();
        powerDoorBlocking = pc.isPowerDoorBlocking();
        immobilizer = pc.isImmobilizer();
        satelliteAlarmControl = pc.isSatelliteAlarmControl();
        frontalAirbags = pc.isFrontalAirbags();
        kneeAirbags = pc.isKneeAirbags();
        sideWindowAirbags = pc.isSideWindowAirbags();
        frontSideAirbags = pc.isFrontSideAirbags();
        rearSideAirbags = pc.isRearSideAirbags();
        absSystem = pc.isAbsSystem();
        dtcSystem = pc.isDtcSystem();
        trackingControl = pc.isTrackingControl();
        breakAssistSystem = pc.isBreakAssistSystem();
        emergencyBreakSystem = pc.isEmergencyBreakSystem();
        diffLockSystem = pc.isDiffLockSystem();
        pedestrianDetectSystem = pc.isPedestrianDetectSystem();
        cdDvdBluRay = pc.isCdDvdBluRay();
        mp3 = pc.isMp3();
        radio = pc.isRadio();
        tvSystem = pc.isTvSystem();
        videoSystem = pc.isVideoSystem();
        mediaOnWheelControl = pc.isMediaOnWheelControl();
        usb = pc.isUsb();
        aux = pc.isAux();
        bluetooth = pc.isBluetooth();
        gpsNavigation = pc.isGpsNavigation();
        audioSystemType = pc.getAudioSystemType();
        subwoofer = pc.isSubwoofer();
        frontLightType = pc.getFrontLightType();
        antifogLights = pc.isAntifogLights();
        frontLightCleaning = pc.isFrontLightCleaning();
        adaptiveLights = pc.isAdaptiveLights();
        howToContactVsSeller = pc.getHowToContactVsSeller();
        tyreSize = pc.getTyreSize();
        winterTyreSetIncluded = pc.isWinterTyreSetIncluded();
        typeOfEngine = pc.getTypeOfEngine();
        wheelDrive = pc.getWheelDrive();
        transmission = pc.getTransmission();
        modification = pc.getModification();
        configuration = pc.getConfiguration();
        category = pc.getCategory().getName();
        message = pc.getMessage().getText();
        title = pc.getTitle();
        description = pc.getDescription();
        price = pc.getPrice();
        contact = pc.getContact();
        meetingAddress = pc.getMeetingAddress();
        isActive = pc.getIsActive();
        viewNumber = pc.getViewNumber();
        datePosting = pc.getDatePosting().format(DateTimeFormatter.ofPattern("dd.MM.yyyy HH:mm:ss"));
        city = pc.getCity().getName();
        condition = pc.getCondition();
        videoURL = pc.getVideoURL();
        contactEmail = pc.getContactEmail();
    }
}
